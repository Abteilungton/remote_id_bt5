/* -*- tab-width: 2; mode: c; -*-
 *
 * A program for the nRF52840 to transmit ASTM F3411/ASD-STAN 4709-002/opendroneid 
 * remote identification signals over Bluetooth.
 * 
 * Copyright (c) 2023 Steve Jack
 *
 * Apache 2.0 licence
 *
 * Parts of this program are taken from samples which are
 * Copyright (c) Intel Corporation 
 * or
 * Copyright (c) Nordic Semiconductor
 *
 */

#include <stddef.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <time.h>

#include <zephyr/kernel.h>
#include <zephyr/types.h>
#include <zephyr/sys/printk.h>
#include <zephyr/sys/util.h>
#include <zephyr/device.h>

#include "opendroneid.h"

                        // 01234567890123456789
#define UAV_OPERATOR      "${uav_operator}"
#define UAV_ID            "${uav_id}"             // ~ => random generated
#define SELF_ID           "${self_id}"
#define UA_TYPE           ${odid_uatype}

#define EU_CATEGORY       ${odid_cat}

#define AUTH_KEY          "0123456789abcdef"
#define AUTH_IV           "nopqrs"

#define GPS_PASSTHROUGH   1
#define TXT_BOTH_PORTS    0 // Sends error messages to both the serial and USB ports.
#define SPEKTRUM          ${spektrum}
#define REQ_SATS          5 // 8 for real use, 5 for indoor testing.
#define BATT_VOLTS        ${batt_volts}

// National/regional variations.
#define ID_JAPAN          ${id_japan}
#define ID_USA            ${id_usa}

//

void      txt_message(const char *,const int,const int,const int); // Packages the message into a NMEA TXT.
void      debug_message(const char *);
float     battery_voltage(void);
int       crypto_init(uint8_t *);
#if ID_JAPAN
int       auth_japan(ODID_UAS_Data *,ODID_Message_encoded *,uint8_t *);
#endif

#ifdef __cplusplus

void      txt_message(const char *);

extern "C" {
#endif

  uint64_t  alt_unix_secs(int,int,int,int,int,int);

#ifdef __cplusplus
};
#endif

/*
 *
 */

